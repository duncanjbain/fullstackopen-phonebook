{"version":3,"sources":["components/AddPersonForm.js","components/Search.js","components/DisplayPersons.js","services/persons.js","components/Notification.js","components/App.js","index.js"],"names":["AddPersonForm","addName","newName","handleNameChange","handlePhoneNumberChange","newPhoneNumber","onSubmit","value","onChange","type","Search","nameSearch","DisplayPersons","personsToShow","deleteName","map","person","key","id","name","number","onClick","axios","get","then","response","data","newPersonObject","post","personID","delete","personId","put","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewPhoneNumber","setNewNameSearch","reloadPersons","setReloadPersons","notitficationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","personService","initialPersons","filter","toLowerCase","includes","handleSuccessNotification","setTimeout","event","target","preventDefault","newNameObject","some","item","window","confirm","find","p","returnedPersons","concat","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2b2c125.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AddPersonForm = ({\n  addName,\n  newName,\n  handleNameChange,\n  handlePhoneNumberChange,\n  newPhoneNumber,\n}) => {\n  return (\n    <div>\n      <h3>Add Phone Number</h3>\n      <form onSubmit={addName}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          phone number:{\" \"}\n          <input value={newPhoneNumber} onChange={handlePhoneNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddPersonForm;\n","import React from \"react\";\n\nconst Search = ({ nameSearch, handleNameChange }) => {\n  return (\n    <div>\n      filter names with{\" \"}\n      <input value={nameSearch} onChange={handleNameChange} />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst DisplayPersons = ({ personsToShow, deleteName }) => {\n  return (\n    <div>\n      <h2>Numbers</h2>\n      {personsToShow.map((person) => (\n        <li key={person.id}>\n          {person.name} - {person.number} <button onClick={() => deleteName(person.id)} key={person.id}>Delete</button>\n        </li>\n      ))}\n    </div>\n  );\n};\n\nexport default DisplayPersons;\n","import axios from 'axios';\n\nconst BASE_URL = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(BASE_URL)\n  return request.then((response) => response.data)\n}\n\nconst createNewPerson = (newPersonObject) => {\n  const request = axios.post(BASE_URL, newPersonObject)\n  return request.then((response) => response.data)\n}\n\n\nconst updatePerson = (personId, newPersonObject) => {\n  const request= axios.put(`${BASE_URL}/${personId}`, newPersonObject);\n  return request.then((response) => response.data)\n}\n\nconst deletePerson = (personID) => {\n  const request = axios.delete(`${BASE_URL}/${personID}`)\n  return request.then((response) => response.data)\n}\n\nexport default {getAll, createNewPerson, deletePerson, updatePerson}","import React from \"react\";\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className={type}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport AddPersonForm from \"./AddPersonForm\";\nimport Search from \"./Search\";\nimport DisplayPersons from \"./DisplayPersons\";\nimport personService from \"../services/persons\";\nimport Notification from \"./Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newPhoneNumber, setNewPhoneNumber] = useState(\"\");\n  const [nameSearch, setNewNameSearch] = useState(\"\");\n  const [reloadPersons, setReloadPersons] = useState(false);\n  const [notitficationMessage, setNotificationMessage] = useState(null);\n  const [notificationType, setNotificationType] = useState(\"\");\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => setPersons(initialPersons));\n  }, [reloadPersons]);\n\n  const handleNameSearchChange = (event) => {\n    setNewNameSearch(event.target.value);\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneNumberChange = (event) => {\n    setNewPhoneNumber(event.target.value);\n  };\n\n  const personsToShow = persons.filter((person) =>\n    person.name.toLowerCase().includes(nameSearch.toLowerCase())\n  );\n\n  const handleErrorNotification = (message) => {\n    setNotificationType(\"error\");\n    setNotificationMessage(message);\n    setTimeout(() => {\n      setNotificationMessage(null);\n    }, 5000);\n  };\n\n  const handleSuccessNotification = (message) => {\n    setNotificationType(\"success\");\n    setNotificationMessage(message);\n    setTimeout(() => {\n      setNotificationMessage(null);\n    }, 5000);\n  };\n\n  const addName = (event) => {\n    event.preventDefault();\n    const newNameObject = {\n      name: newName,\n      number: newPhoneNumber,\n    };\n    const nameExists = persons.some((item) => item.name === newName);\n    if (!nameExists) {\n      personService\n        .createNewPerson(newNameObject)\n        .then((returnedPersons) => {\n          setPersons(persons.concat(returnedPersons));\n        })\n        .then(\n          handleSuccessNotification(\n            `Success! The number for ${newName} has been updated.`\n          )\n        ).catch(error => handleSuccessNotification(error.response.data.error));\n    } else {\n      if (\n        window.confirm(\n          `Sorry, the name \"${newName}\" already exists! Do you wish to update the existing number?`\n        )\n      ) {\n        const person = persons.find((p) => p.name === newName);\n        const personId = person.id;\n        personService\n          .updatePerson(personId, newNameObject)\n          .then((returnedPersons) => {\n            setPersons(\n              persons.map((person) =>\n                person.name !== personId ? person : returnedPersons\n              )\n            );\n          })\n          .then(\n            handleSuccessNotification(\n              `Success! The number for ${newName} has been updated.`\n            )\n          );\n        setReloadPersons(true);\n      }\n    }\n\n    setNewName(\"\"); //clear new name state\n    setNewPhoneNumber(\"\");\n  };\n\n  const deleteName = (personID) => {\n    if (window.confirm(\"Delete this person?\")) {\n      const person = persons.find((p) => p.id === personID);\n      personService\n        .deletePerson(personID)\n        .then(setReloadPersons(true))\n        .catch((error) => {\n          handleErrorNotification(\n            `The person ${person.name} has already been removed!`\n          );\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Notification message={notitficationMessage} type={notificationType} />\n      <section>\n        <header>\n          <h2>Phonebook</h2>\n        </header>\n        <Search\n          nameSearch={nameSearch}\n          handleNameChange={handleNameSearchChange}\n        />\n      </section>\n      <div>\n        <h2>Phone Numbers</h2>\n        <AddPersonForm\n          addName={addName}\n          newName={newName}\n          handleNameChange={handleNameChange}\n          handlePhoneNumberChange={handlePhoneNumberChange}\n          newPhoneNumber={newPhoneNumber}\n        />\n      </div>\n      <DisplayPersons personsToShow={personsToShow} deleteName={deleteName} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}